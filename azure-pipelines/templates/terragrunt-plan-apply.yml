parameters:
  - name: agent_pool
    type: string
  - name: module
    type: string
  - name: environment
    type: string
  - name: subscription
    type: string
  - name: dependsOnTfModules
    type: object
    default: []
  - name: plan_or_apply
    type: string
    values:
    - plan
    - apply

jobs:
- job: ${{parameters.plan_or_apply}}_terragrunt_${{parameters.module}}_${{parameters.environment}}
  displayName: 'Terragrunt ${{parameters.plan_or_apply}} ${{parameters.environment}} ${{parameters.module}} layer'
  pool: ${{parameters.agent_pool}}
  ${{ if parameters.dependsOnTfModules }}:
    dependsOn:
      - ${{ each module in parameters.dependsOnTfModules }}:
          - ${{parameters.plan_or_apply}}_terragrunt_${{ module }}_${{parameters.environment}}

  steps:
    - bash: |
        wget https://github.com/gruntwork-io/terragrunt/releases/latest/download/terragrunt_linux_amd64
        mv terragrunt_linux_amd64 terragrunt
        chmod +x terragrunt
        sudo mv terragrunt /usr/local/bin
        sudo apt-get install zip -y
      displayName: InstallTerragruntAndTools

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
      displayName: TerraformInstall
      inputs:
        terraformVersion: '=1.11.4'

    - task: Bash@3
      displayName: 'Install Azure CLI'
      inputs:
        filePath: '$(System.DefaultWorkingDirectory)/pipeline/scripts/install_cli.sh'

    - task: AzureCLI@2
      displayName: Authenticate Terraform
      inputs:
        scriptType: bash
        scriptLocation: inlineScript
        azureSubscription: ${{parameters.subscription}}
        addSpnToEnvironment: true
        inlineScript: |
          echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$(az account show --query id --output tsv)"
          echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$servicePrincipalId"
          echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET]$servicePrincipalKey"
          echo "##vso[task.setvariable variable=ARM_TENANT_ID]$tenantId"

    - bash: |
        PLAN_PATH='$(System.DefaultWorkingDirectory)/environments/${{parameters.environment}}/${{parameters.module}}/tf.plan'

        (terragrunt plan -out $PLAN_PATH --detailed-exitcode) || error_code=$?
        if [[ "${error_code}" -eq 1 ]]; then
          exit 1
        elif [[ "${error_code}" -eq 2 ]]; then
          echo "##vso[task.logissue type=warning]Plan '${{parameters.module}}' has changes on ${{parameters.environment}}"
        fi
      displayName: "Plan ${{parameters.environment}} ${{parameters.module}}"
      workingDirectory: $(System.DefaultWorkingDirectory)/environments/${{parameters.environment}}/${{parameters.module}}

    - bash: |
        PLAN_PATH='$(System.DefaultWorkingDirectory)/environments/${{parameters.environment}}/${{parameters.module}}/tf.plan'
        terragrunt apply $PLAN_PATH
      displayName: "Apply ${{parameters.environment}} ${{parameters.module}}"
      condition: ${{ eq(parameters.plan_or_apply, 'apply') }}
      workingDirectory: $(System.DefaultWorkingDirectory)/environments/${{parameters.environment}}/${{parameters.module}}
